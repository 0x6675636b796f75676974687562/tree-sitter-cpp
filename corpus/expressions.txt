================================================
Scoped function calls
================================================

int main() {
  abc::def("hello", "world");
}

---

(translation_unit (function_definition
  (identifier)
  (function_declarator (identifier))
  (compound_statement
    (expression_statement (call_expression
      (scoped_identifier (identifier) (identifier))
      (argument_list
        (string_literal)
        (string_literal)))))))

=================================================
Compound literals without parentheses
=================================================

T x = T{0};

---

(translation_unit
  (declaration
    (identifier)
    (init_declarator
      (identifier)
      (compound_literal_expression (identifier) (initializer_list (number_literal))))))

=================================================
Explicit destructor calls
=================================================

int main() {
  foo.~Foo();
  bar->~Bar();
}

---

(translation_unit
  (function_definition
    (identifier)
    (function_declarator (identifier))
    (compound_statement
      (expression_statement (call_expression
        (field_expression (identifier) (destructor_name (identifier)))
        (argument_list)))
      (expression_statement (call_expression
        (field_expression (identifier) (destructor_name (identifier)))
        (argument_list))))))

=================================================
New and Delete expressions
=================================================

int main() {
  auto a = new T();
  auto b = new U::V{};
  auto c = new (&d) T();
  auto c = new T[]();
  delete a;
  ::delete[] c;
}

---

(translation_unit
  (function_definition
    (identifier)
    (function_declarator (identifier))
    (compound_statement
      (declaration
        (auto)
        (init_declarator
          (identifier)
          (new_expression (identifier) (argument_list))))
      (declaration
        (auto)
        (init_declarator
          (identifier)
          (new_expression (scoped_identifier (identifier) (identifier)) (initializer_list))))
      (declaration
        (auto)
        (init_declarator
          (identifier)
          (new_expression (parenthesized_expression (pointer_expression (identifier))) (identifier) (argument_list))))
      (declaration
        (auto)
        (init_declarator
          (identifier)
          (new_expression (identifier) (abstract_array_declarator) (argument_list))))
      (expression_statement (delete_expression (identifier)))
      (expression_statement (delete_expression (identifier))))))

====================================================
Initializer lists as arguments
====================================================

int main() {
  pairs.push_back({true, false});
}

---

(translation_unit
  (function_definition
    (identifier)
    (function_declarator (identifier))
    (compound_statement
      (expression_statement (call_expression
        (field_expression (identifier) (identifier))
        (argument_list (initializer_list (identifier) (identifier))))))))
